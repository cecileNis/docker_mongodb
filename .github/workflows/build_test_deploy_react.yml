name: Build, Test and Deploy React Application

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]
  pull_request:
    branches: [main]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build_test:
    permissions: # Job-level permissions configuration starts here
      contents: write # 'write' access to repository contents
      pull-requests: write # 'write' access to pull requests
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: npm i, build and test
        run: |
          npm i
          npm run build --if-present
          npm test

      - name: Build the stack mongo - nodejs
        run: docker-compose -f docker-compose-mongo.yml up -d
      # - name: api test
      #   working-directory: server-mongo
      # run: |
      #   npm test
      - name: Run e2e tests with cypress to Node
        run: npx cypress run --spec 'cypress/e2e/NodeMongoTest.cy.js'
      - name: Stop the stack mongo - nodejs
        run: docker-compose -f docker-compose-mongo.yml down

      - name: Wait for services to start
        run: sleep 10

      #- name: Build the stack mysql - py
      #  run: docker-compose -f docker-compose-sql.yml up -d
      #- name: Run e2e tests with cypress
      #  run: npx cypress run --spec 'cypress/e2e/PythonMysqlTest.cy.js'
      #- name: Stop the stack mysql - py
      #  run: docker-compose -f docker-compose-sql.yml down

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      - name: Generate jsdoc
        run: npm run jsdoc
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          # Upload entire repository
          path: build
          if-no-files-found: error
      - name: Update build version
        run: |
          git config --global user.email "wtom@live.fr"
          git config --global user.name "Tom-Wittke"
          git status
          git tag v0.1.0-${{github.run_id}}${{github.run_number}}${{github.run_attempt}} -a -m "build number ${{github.run_number}}" 
          npm version from-git --allow-same-version
  # Deploy job
  deploy:
    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{steps.deployment.outputs.page_url}}
    runs-on:
      ubuntu-latest
      # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write # to deploy to Pages
      id-token: write # to verify the deployment originates from an appropriate source

    # Add a dependency to the build job
    needs: build_test
    # Specify runner + deployment step
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
